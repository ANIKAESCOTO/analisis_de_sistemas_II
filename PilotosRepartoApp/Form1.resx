<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +n8BADMvppGGipAAAAAASUVORK5CYII=
</value>
  </data>
</root>